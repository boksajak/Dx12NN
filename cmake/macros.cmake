macro(get_sources_from_folder OUT_VAR FOLDER)
    set(GLOB_EXPR "${FOLDER}*.c" "${FOLDER}*.cpp")
    if(MSVC)
        list(APPEND GLOB_EXPR "${FOLDER}*.h" "${FOLDER}*.hpp" "${FOLDER}*.inl")
    endif(MSVC)
    file(GLOB ${OUT_VAR} RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" ${GLOB_EXPR})
endmacro(get_sources_from_folder)

macro(print_list_contents heading list)
    message(STATUS ${heading})
    foreach(item ${${list}})
        message(STATUS "    ${item}")
    endforeach(item)
endmacro(print_list_contents)

macro(post_build_make_dir_link target source  destination )
    if(WIN32)
        add_custom_command(TARGET ${target} PRE_BUILD  COMMAND rmdir /Q   "\"${destination}\"" || set errorLevel = 0)
        add_custom_command(TARGET ${target} POST_BUILD COMMAND mklink /D  "\"${destination}\"" "\"${source}\"" || set errorLevel = 0)
    else(UNIX)
        add_custom_command(TARGET ${target} POST_BUILD COMMAND rm -f "${destination}")
        add_custom_command(TARGET ${target} POST_BUILD COMMAND ln -s "${source}" "${destination}")
    endif(WIN32)
endmacro(post_build_make_dir_link)

MACRO(SUBDIRLIST result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${curdir}/${child})
        SET(dirlist ${dirlist} ${child})
    ENDIF()
  ENDFOREACH()
  SET(${result} ${dirlist})
ENDMACRO()
